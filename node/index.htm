<!-- <html>

<head>
    <title>文件上传表单</title>
</head>

<body>
    <h3>文件上传：</h3>
    选择一个文件上传: <br />
    <form action="/file_upload" method="post" enctype="multipart/form-data">

        First Name: <input type="text" name="first_name"> <br>

        Last Name: <input type="text" name="last_name">

        <input type="file" name="image" size="50" />
        <br />
        <input type="submit" value="上传文件" />
    </form>
</body>

</html> -->

<html>

<body>
    <form action="http://127.0.0.1:8081/process_post" method="POST">
        First Name: <input id="firstname" type="text" name="first_name"> <br>

        <inputtype="file" name="image" size="50" />
        Last Name: <input type="text" name="last_name">
        <input id="lastname"  type="submit" value="Submit">
    </form>
    <button id="id-button">1111</button>


    <script>
        const convertModelToFormData = function (model, formData = new FormData(), namespace = '') {
            for (let propertyName in model) {
                // in 不能识别哪些属性是对象自身的，哪些属性是继承的，所以要用 hasOwnProperty 先判断一下
                if (!model.hasOwnProperty(propertyName) || model[propertyName] == undefined) continue;
                // 如果有传入键名就传入的键名，没有就是 propertyName
                let formKey = namespace ? `${namespace}[${propertyName}]` : propertyName;
                if (model[propertyName] instanceof Date) {
                    // 后台的时间格式为 UTC 时间，也就是比北京时间晚8个小时。
                    formData.append(formKey, (model[propertyName]).toUTCString());
                }
                else if (model[propertyName] instanceof File) {
                    // 键值对为 文件名：文件
                    formData.append(model[propertyName].name, model[propertyName]);
                }
                else if (model[propertyName] instanceof Array) {
                    model[propertyName].forEach((element, index) => {
                        if (typeof element != 'object') {
                            // 键值对为 数组名[]：数值，后面看情况修改
                            formData.append(`${formKey}[]`, element);
                        }
                        // File也是对象
                        else if (element instanceof File) {
                            formData.append(element.name, element);
                        }
                        else {
                            // 键值对为 数组名[索引值]：对象键值，后面看情况修改
                            const tempFormKey = `${formKey}[${index}]`;
                            let convert = convertModelToFormData(element, formData, tempFormKey);
                            // let convert = convertModelToFormData(element, formData);
                            for (var pair of convert) {
                                formData.append(pair[0], pair[1])
                            }
                        }
                    });
                }
                else if (typeof model[propertyName] === 'object') {
                    // 键值对为 对象名：对象键值，后面看情况修改
                    let convert = convertModelToFormData(model[propertyName], formData, formKey);
                    for (var pair of convert.entries()) {
                        formData.append(pair[0], pair[1])
                    }
                }
                else {
                    formData.append(formKey, model[propertyName].toString());
                }
            }
            return formData;
        }

        var ajax = function (request) {
            /*
            request 是一个 object, 有如下属性
                method, 请求的方法, string
                url, 请求的路径, string
                data, 请求发送的数据, 如果是 GET 方法则没这个值, string
                callback, 响应回调, function
        
            本题不会就放弃, 本题带了一个用法在下方
            */
            var r = new XMLHttpRequest()
            r.open(request.method, request.url, true)
            if (request.contentType !== undefined) {
                r.setRequestHeader('Content-Type', request.contentType)
            }
            r.onreadystatechange = function (event) {
                if (r.readyState === 4) {
                    request.callback(r.response)
                }
            }
            if (request.method === 'GET') {
                r.send()
            } else {
                r.send(request.data)
            }
        }
        var e = function (selector) {
            return document.querySelector(selector)
        }
        var butt = e("#id-button")
        butt.addEventListener('click', function (event) {

            var form = {
            title: e('#firstname').value,
            author: e('#lastname').value,
        }
            // var formData = new FormData()
            // formData.append('firstname', e('#firstname').value)
            // formData.append('lastname', e('#lastname').value)

            var request = {
                method: 'POST',
                url: '/process_post',
                data: convertModelToFormData(form),
                contentType: 'application/x-www-form-urlencoded',
                // contentType: 'multipart/form-data',
                callback: function (response) {
                    console.log('响应', response)
                    // var res = JSON.parse(response)
                }
            }
            ajax(request)


        })</script>
</body>

</html>